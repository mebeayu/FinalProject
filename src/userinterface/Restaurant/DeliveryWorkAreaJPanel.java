/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.Restaurant;

import Business.Enterprise.Enterprise;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.Order;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import javax.swing.JOptionPane;
import java.awt.CardLayout;
import java.text.SimpleDateFormat;
import java.util.Date;

/**
 *
 * @author 0
 */
public class DeliveryWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form DeliveryWorkAreaJPanel
     */
    JPanel userProcessContainer;
    UserAccount userAccount;
    Enterprise cusEnterprise;
    public DeliveryWorkAreaJPanel(JPanel userProcessContainer, UserAccount userAccount, Enterprise cusEnterprise) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        this.cusEnterprise = cusEnterprise;
        
        populateOrder();
    }
    
    public void populateOrder(){
        DefaultTableModel dtm = (DefaultTableModel) tabOrder.getModel();
        dtm.setRowCount(0);
        for(Organization org : cusEnterprise.getOrganizationDirectory().getOrganizationList()){
            for(UserAccount ua : org.getUserAccountDirectory().getUserAccountList()){
                for(Order order: ua.getWorkQueue().getOrderList()){
                    Object[] row = new Object[6];
                    row[0] = order;         
                    row[1] = order.getSender();
                    row[2] = order.getReceiver(); 
                    row[3] = order.getStatus(); 
                    row[4] = order.getRequestTime();
                    row[5] = order.getResolveTime();
                    dtm.addRow(row);
                }
            }
        }
            
                
            
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabOrder = new javax.swing.JTable();
        refreshJButton = new javax.swing.JButton();
        btnArrive = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        tabOrder.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Message", "Sender", "Receiver", "Status", "Request time", "Resolve time"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tabOrder);

        refreshJButton.setText("Refresh");
        refreshJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshJButtonActionPerformed(evt);
            }
        });

        btnArrive.setText("Arrived");
        btnArrive.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnArriveActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Order taking");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(refreshJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(220, 220, 220)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 713, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(333, 333, 333)
                        .addComponent(btnArrive, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(55, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jLabel1)
                .addGap(32, 32, 32)
                .addComponent(refreshJButton)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(btnArrive)
                .addContainerGap(115, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void refreshJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshJButtonActionPerformed
        populateOrder();
    }//GEN-LAST:event_refreshJButtonActionPerformed

    private void btnArriveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnArriveActionPerformed

        int selectedRow = tabOrder.getSelectedRow();
        if(selectedRow >= 0){
            Order order = (Order) tabOrder.getValueAt(selectedRow, 0);
            if(order.getStatus().equals("pending") && order.getSender().equals(userAccount)){
                order.setStatus("completed");
                
                Date resolveDate = new Date();
                SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
                order.setResolveTime(formatter.format(resolveDate));
                
                populateOrder();
            }
            else 
                JOptionPane.showMessageDialog(null, "this order cannot be sent!","Warning",JOptionPane.WARNING_MESSAGE);
        }
        else
            JOptionPane.showMessageDialog(null, "Please choose an order you sent!","Warning",JOptionPane.WARNING_MESSAGE);
        

    }//GEN-LAST:event_btnArriveActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnArrive;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton refreshJButton;
    private javax.swing.JTable tabOrder;
    // End of variables declaration//GEN-END:variables
}
